@using System.Text.Json;
@{
    var data = Outputs
            .FromPipeline("Data")
            .FilterSources("data/*")
            .FirstOrDefault(s => s.Source.ToString().EndsWith("mainNav.json"));

    var topMenuItemsRaw = data.Get<object[]>("MenuItems");

    var topMenu = new List<TopMenuItem>();

    foreach (var item in topMenuItemsRaw)
    {
        string serialized = JsonSerializer.Serialize(item);
        var topMenuItem = JsonSerializer.Deserialize<TopMenuItem>(serialized);
        topMenu.Add(topMenuItem);
    }
}
<aside>
    <div class="offcanvas-lg offcanvas-start" tabindex="-1" id="mainNavigation" aria-labelledby="mainNavigationLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="mainNavigationLabel">The Five Rings</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#mainNavigation"
                aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="list-unstyled">
                @{

                    foreach (var item in topMenu)
                    {
                        var hasChildren = (item.Children?.Count() ?? 0) > 0;
                        <li class="py-2">
                            <a href="@item.Path">
                                @item.Title
                            </a>
                            @{
                                if (hasChildren)
                                {
                                    <ul>
                                        @{
                                            foreach (var childItem in item.Children)
                                            {
                                                <li class="my-1"><a href="@childItem.Path">@childItem.Title</a></li>
                                            }
                                        }
                                    </ul>
                                }
                            }
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</aside>
