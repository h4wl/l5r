@using System.Text.Json;
@{
  var data = Outputs
      .FromPipeline("Data")
      .FilterSources("data/*")
      .FirstOrDefault(s => s.Source.ToString().EndsWith("mainNav.json"));

  var topMenuItemsRaw = data.Get<object[]>("MenuItems");

  var topMenu = new List<TopMenuItem>();

  foreach (var item in topMenuItemsRaw)
  {
    string serialized = JsonSerializer.Serialize(item);
    var topMenuItem = JsonSerializer.Deserialize<TopMenuItem>(serialized);
    topMenu.Add(topMenuItem);
  }
}
<aside>
  <div class="offcanvas-lg offcanvas-start mt-lg-3" tabindex="-1" id="mainNavigation"
    aria-labelledby="mainNavigationLabel">
    <div class="offcanvas-header">
      <h5 class="offcanvas-title" id="mainNavigationLabel">The Five Rings</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#mainNavigation"
        aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
      <div class="vstack gap-3">

        @{

          foreach (var item in topMenu)
          {
            var sprite = item.Path.Split("-").ToList().Last();
            var hasChildren = (item.Children?.Count() ?? 0) > 0;
            var iconSize = "1.5rem;";
            <div class="vstack gap-1">
              <div class="input-group books">
                <div class="input-group-text px-0">
                  <div class="ring-sprite-no-label sprite--@sprite d-inline-block"
                  style="width: @iconSize height: @iconSize"></div>
                  </div>
                  <a class="btn btn-toc" href="@item.Path"><strong>@item.Title</strong></a>
                </div>

              @{
                if (hasChildren)
                {
                  foreach (var childItem in item.Children)
                  {
                    <a class="btn btn-toc ms-4" href="@childItem.Path">@childItem.Title</a>

                  }
                }
              }
            </div>
          }
        }
      </div>



      @* <ul class="list-unstyled">
        @{

        foreach (var item in topMenu)
        {
        var hasChildren = (item.Children?.Count() ?? 0) > 0;
        <li class="py-2">
        <a href="@item.Path">
        @item.Title
        </a>
        @{
        if (hasChildren)
        {
        <ul>
        @{
        foreach (var childItem in item.Children)
        {
        <li class="my-1"><a href="@childItem.Path">@childItem.Title</a></li>
        }
        }
        </ul>
        }
        }
        </li>
        }
        }
        </ul> *@
    </div>
  </div>
</aside>
